input {
	beats {
		port => 5044
	}
}

filter {
	mutate {
		add_field => {
			"agent_type" => "cubebeat"
			"agent_module" => "synflood"
		}
		 add_tag => "agent_type"
	}

	ruby {
		code => "event.set('border_logstash_time', Time.now());"
		add_tag => "border_logstash_time"
	}

	mutate {
		convert => { "border_logstash_time" => "string" }
		add_tag => "border_logstash_time2string"
	}

	date {
		match => [ "border_logstash_time", "ISO8601" ]
		target => "border_logstash_time"
		tag_on_failure => "border_logstash_time2date_failure"
		add_tag => "border_logstash_time2date"
	}

	date {
		locale => "en"
		match => [ "lastupdate", "UNIX_MS" ]
		target => "LastUpdate"
		tag_on_failure => "last_update_unix_ms2date_failure"
		remove_field => "lastupdate"
	}

	mutate {
		rename => [ "tcpattemptfails", "TcpAttemptFails" ]
		rename => [ "tcpoutrsts", "TcpOutRsts" ]
		rename => [ "deliverratio", "DeliverRatio" ]
		rename => [ "responseratio", "ResponseRatio" ]

		convert => {
			"border_logstash_time" => "string"
			"TcpAttemptFails" => "integer"
			"TcpOutRsts" => "integer"
			"ResponseRatio" => "float"
		}
		add_tag => "metrics_string2number"
	}

	ruby {
		init => "@@map = {};"
		code => "event.set('TcpAttemptFails_delta', @@map.key?('TcpAttemptFails_prev') ? event.get('TcpAttemptFails') - @@map['TcpAttemptFails_prev'] : 0);
					event.set('TcpOutRsts_delta', @@map.key?('TcpOutRsts_prev') ? event.get('TcpOutRsts') - @@map['TcpOutRsts_prev'] : 0);
					event.set('@timestamp_delta', @@map.key?('@timestamp_prev') ? event.get('@timestamp').to_i - @@map['@timestamp_prev'] : 0);
					event.set('LastUpdate_delta', @@map.key?('LastUpdate_prev') ? event.get('LastUpdate').to_i - @@map['LastUpdate_prev'] : 0);
					@@map['TcpAttemptFails_prev'] = event.get('TcpAttemptFails');
					@@map['TcpOutRsts_prev'] = event.get('TcpOutRsts');
					@@map['@timestamp_prev'] = event.get('@timestamp').to_i;
					@@map['LastUpdate_prev'] = event.get('LastUpdate').to_i;"
		add_tag => "add_delta_cubebeat_data"
	}
}

output {
	kafka {
		bootstrap_servers => "kafka-bus:9092"
		client_id => "ssh-server-logstash-ssh-server"
		topic_id => "ssh-server"
		codec => json
	}

	if "debug" in [tags] {
		stdout {
			codec  => rubydebug {
				metadata => true
			}
		}
	}
}
